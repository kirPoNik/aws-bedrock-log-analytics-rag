# Streamlit Chat with Logs - Environment Variables Configuration
# Copy this file to .env and fill in your actual values
# Note: .env files should be added to .gitignore to avoid committing secrets

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
# AWS region where your resources are deployed
AWS_REGION=us-east-1

# =============================================================================
# OPENSEARCH CONFIGURATION
# =============================================================================
# OpenSearch Serverless endpoint (get this from Terraform output)
# Example: https://abcd1234.us-east-1.aoss.amazonaws.com
OPENSEARCH_HOST=your-opensearch-endpoint.us-east-1.aoss.amazonaws.com

# OpenSearch index name pattern for log searches
# Use * wildcard to search across daily indexes
INDEX_NAME=application-logs-*

# =============================================================================
# BEDROCK CONFIGURATION
# =============================================================================
# Bedrock model ID for generating embeddings
BEDROCK_MODEL_ID_EMBEDDING=amazon.titan-embed-text-v2

# Bedrock model ID for generating responses (Claude)
BEDROCK_MODEL_ID_CLAUDE=anthropic.claude-3-sonnet-20240229-v1:0

# Timeout for Bedrock API calls (seconds)
BEDROCK_TIMEOUT=30

# Maximum retry attempts for Bedrock API calls
BEDROCK_MAX_RETRIES=3

# =============================================================================
# SEARCH CONFIGURATION
# =============================================================================
# Default number of log entries to retrieve for analysis
DEFAULT_SEARCH_SIZE=10

# Maximum number of log entries that can be retrieved
MAX_SEARCH_SIZE=50

# =============================================================================
# UI CONFIGURATION
# =============================================================================
# Application page title displayed in browser and UI
PAGE_TITLE=Chat with Your Logs

# Maximum length of user queries (characters)
MAX_QUERY_LENGTH=500

# =============================================================================
# COST OPTIMIZATION
# =============================================================================
# Enable cost tracking and metrics (true/false)
ENABLE_COST_TRACKING=true

# Maximum tokens that can be processed per user session
MAX_TOKENS_PER_SESSION=500000

# Enable caching of query results to reduce API calls (true/false)
ENABLE_QUERY_CACHING=true

# =============================================================================
# RATE LIMITING
# =============================================================================
# Maximum number of requests allowed per hour per session
MAX_REQUESTS_PER_HOUR=100

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Enable debug mode for detailed logging and debugging info (true/false)
# WARNING: Only enable this in development - it may expose sensitive information
ENABLE_DEBUG_MODE=false

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# Development Environment Settings:
# LOG_LEVEL=DEBUG
# ENABLE_DEBUG_MODE=true
# MAX_TOKENS_PER_SESSION=100000
# MAX_REQUESTS_PER_HOUR=50
# DEFAULT_SEARCH_SIZE=5

# Production Environment Settings:
# LOG_LEVEL=INFO
# ENABLE_DEBUG_MODE=false
# MAX_TOKENS_PER_SESSION=1000000
# MAX_REQUESTS_PER_HOUR=200
# DEFAULT_SEARCH_SIZE=15

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit .env files to version control
# 2. Add .env to your .gitignore file
# 3. Use AWS IAM roles/policies for authentication instead of hardcoded credentials
# 4. Rotate credentials regularly
# 5. Use different configurations for dev/staging/production environments

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# For containerized deployments (Docker, Kubernetes):
# - These environment variables can be set in your container configuration
# - Consider using secrets management systems for production
# - For AWS deployments, use Parameter Store or Secrets Manager

# For local development:
# - Install python-dotenv: pip install python-dotenv
# - The Streamlit app will automatically load .env files
# - Ensure your AWS credentials are configured (aws configure or IAM roles)

# =============================================================================
# GETTING CONFIGURATION VALUES
# =============================================================================
# To get your OPENSEARCH_HOST value:
# 1. Deploy infrastructure: cd envs/dev && terraform apply
# 2. Get output: terraform output opensearch_collection_endpoint
# 3. Copy the endpoint URL (without https://) to OPENSEARCH_HOST above
